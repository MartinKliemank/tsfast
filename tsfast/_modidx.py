# Autogenerated by nbdev

d = { 'settings': { 'branch': 'master',
                'doc_baseurl': '/tsfast/',
                'doc_host': 'https://daniel-om-weber.github.io',
                'git_url': 'https://github.com/daniel-om-weber/tsfast/tree/master/',
                'lib_path': 'tsfast'},
  'syms': { 'tsfast.core': { 'tsfast.core.ApplyToDict': ('core.html#applytodict', 'tsfast/core.py'),
                             'tsfast.core.CreateDict': ('core.html#createdict', 'tsfast/core.py'),
                             'tsfast.core.DfApplyFuncSplit': ('core.html#dfapplyfuncsplit', 'tsfast/core.py'),
                             'tsfast.core.DfDropClmExcept': ('core.html#dfdropclmexcept', 'tsfast/core.py'),
                             'tsfast.core.DfFilterQuery': ('core.html#dffilterquery', 'tsfast/core.py'),
                             'tsfast.core.DfHDFCreateWindows': ('core.html#dfhdfcreatewindows', 'tsfast/core.py'),
                             'tsfast.core.DfHDFGetSeqLen': ('core.html#dfhdfgetseqlen', 'tsfast/core.py'),
                             'tsfast.core.DfResamplingFactor': ('core.html#dfresamplingfactor', 'tsfast/core.py'),
                             'tsfast.core.FilterClm': ('core.html#filterclm', 'tsfast/core.py'),
                             'tsfast.core.HDF2Scalars': ('core.html#hdf2scalars', 'tsfast/core.py'),
                             'tsfast.core.HDF2Scalars.__init__': ('core.html#hdf2scalars.__init__', 'tsfast/core.py'),
                             'tsfast.core.HDF2Scalars._extract_dict_scalars': ( 'core.html#hdf2scalars._extract_dict_scalars',
                                                                                'tsfast/core.py'),
                             'tsfast.core.HDF2Scalars.encodes': ('core.html#hdf2scalars.encodes', 'tsfast/core.py'),
                             'tsfast.core.HDF2Sequence': ('core.html#hdf2sequence', 'tsfast/core.py'),
                             'tsfast.core.HDF2Sequence.__init__': ('core.html#hdf2sequence.__init__', 'tsfast/core.py'),
                             'tsfast.core.HDF2Sequence._extract_dict_sequence': ( 'core.html#hdf2sequence._extract_dict_sequence',
                                                                                  'tsfast/core.py'),
                             'tsfast.core.HDF2Sequence._hdf_extract_sequence': ( 'core.html#hdf2sequence._hdf_extract_sequence',
                                                                                 'tsfast/core.py'),
                             'tsfast.core.HDF2Sequence.encodes': ('core.html#hdf2sequence.encodes', 'tsfast/core.py'),
                             'tsfast.core.Memoize': ('core.html#memoize', 'tsfast/core.py'),
                             'tsfast.core.Memoize.__call__': ('core.html#memoize.__call__', 'tsfast/core.py'),
                             'tsfast.core.Memoize.__init__': ('core.html#memoize.__init__', 'tsfast/core.py'),
                             'tsfast.core.MemoizeMP': ('core.html#memoizemp', 'tsfast/core.py'),
                             'tsfast.core.MemoizeMP.__call__': ('core.html#memoizemp.__call__', 'tsfast/core.py'),
                             'tsfast.core.MemoizeMP.__del__': ('core.html#memoizemp.__del__', 'tsfast/core.py'),
                             'tsfast.core.MemoizeMP.__init__': ('core.html#memoizemp.__init__', 'tsfast/core.py'),
                             'tsfast.core.MemoizeMP.cleanup_shared_memory': ('core.html#memoizemp.cleanup_shared_memory', 'tsfast/core.py'),
                             'tsfast.core.ParentSplitter': ('core.html#parentsplitter', 'tsfast/core.py'),
                             'tsfast.core.PercentageSplitter': ('core.html#percentagesplitter', 'tsfast/core.py'),
                             'tsfast.core.ScalarBlock': ('core.html#scalarblock', 'tsfast/core.py'),
                             'tsfast.core.ScalarBlock.__init__': ('core.html#scalarblock.__init__', 'tsfast/core.py'),
                             'tsfast.core.ScalarBlock.from_hdf': ('core.html#scalarblock.from_hdf', 'tsfast/core.py'),
                             'tsfast.core.ScalarNormalize': ('core.html#scalarnormalize', 'tsfast/core.py'),
                             'tsfast.core.ScalarNormalize.__init__': ('core.html#scalarnormalize.__init__', 'tsfast/core.py'),
                             'tsfast.core.ScalarNormalize.decodes': ('core.html#scalarnormalize.decodes', 'tsfast/core.py'),
                             'tsfast.core.ScalarNormalize.encodes': ('core.html#scalarnormalize.encodes', 'tsfast/core.py'),
                             'tsfast.core.ScalarNormalize.from_stats': ('core.html#scalarnormalize.from_stats', 'tsfast/core.py'),
                             'tsfast.core.ScalarNormalize.setups': ('core.html#scalarnormalize.setups', 'tsfast/core.py'),
                             'tsfast.core.ScalarSequenceElement': ('core.html#scalarsequenceelement', 'tsfast/core.py'),
                             'tsfast.core.ScalarSequenceElement.__init__': ('core.html#scalarsequenceelement.__init__', 'tsfast/core.py'),
                             'tsfast.core.ScalarSequenceElement.encodes': ('core.html#scalarsequenceelement.encodes', 'tsfast/core.py'),
                             'tsfast.core.SeqBiasInjection': ('core.html#seqbiasinjection', 'tsfast/core.py'),
                             'tsfast.core.SeqBiasInjection.__init__': ('core.html#seqbiasinjection.__init__', 'tsfast/core.py'),
                             'tsfast.core.SeqBiasInjection.encodes': ('core.html#seqbiasinjection.encodes', 'tsfast/core.py'),
                             'tsfast.core.SeqNoiseInjection': ('core.html#seqnoiseinjection', 'tsfast/core.py'),
                             'tsfast.core.SeqNoiseInjection.__init__': ('core.html#seqnoiseinjection.__init__', 'tsfast/core.py'),
                             'tsfast.core.SeqNoiseInjection.encodes': ('core.html#seqnoiseinjection.encodes', 'tsfast/core.py'),
                             'tsfast.core.SeqNoiseInjection_Grouped': ('core.html#seqnoiseinjection_grouped', 'tsfast/core.py'),
                             'tsfast.core.SeqNoiseInjection_Grouped.__init__': ( 'core.html#seqnoiseinjection_grouped.__init__',
                                                                                 'tsfast/core.py'),
                             'tsfast.core.SeqNoiseInjection_Grouped.encodes': ( 'core.html#seqnoiseinjection_grouped.encodes',
                                                                                'tsfast/core.py'),
                             'tsfast.core.SeqNoiseInjection_Varying': ('core.html#seqnoiseinjection_varying', 'tsfast/core.py'),
                             'tsfast.core.SeqNoiseInjection_Varying.__init__': ( 'core.html#seqnoiseinjection_varying.__init__',
                                                                                 'tsfast/core.py'),
                             'tsfast.core.SeqNoiseInjection_Varying.encodes': ( 'core.html#seqnoiseinjection_varying.encodes',
                                                                                'tsfast/core.py'),
                             'tsfast.core.SeqSlice': ('core.html#seqslice', 'tsfast/core.py'),
                             'tsfast.core.SeqSlice.__init__': ('core.html#seqslice.__init__', 'tsfast/core.py'),
                             'tsfast.core.SeqSlice.encodes': ('core.html#seqslice.encodes', 'tsfast/core.py'),
                             'tsfast.core.Sequence2Spectrogram': ('core.html#sequence2spectrogram', 'tsfast/core.py'),
                             'tsfast.core.Sequence2Spectrogram.__init__': ('core.html#sequence2spectrogram.__init__', 'tsfast/core.py'),
                             'tsfast.core.Sequence2Spectrogram.encodes': ('core.html#sequence2spectrogram.encodes', 'tsfast/core.py'),
                             'tsfast.core.SequenceBlock': ('core.html#sequenceblock', 'tsfast/core.py'),
                             'tsfast.core.SequenceBlock.__init__': ('core.html#sequenceblock.__init__', 'tsfast/core.py'),
                             'tsfast.core.SequenceBlock.from_hdf': ('core.html#sequenceblock.from_hdf', 'tsfast/core.py'),
                             'tsfast.core.SequenceBlock.from_numpy': ('core.html#sequenceblock.from_numpy', 'tsfast/core.py'),
                             'tsfast.core.Spectrogram': ('core.html#spectrogram', 'tsfast/core.py'),
                             'tsfast.core.Spectrogram.__init__': ('core.html#spectrogram.__init__', 'tsfast/core.py'),
                             'tsfast.core.Spectrogram.forward': ('core.html#spectrogram.forward', 'tsfast/core.py'),
                             'tsfast.core.SpectrogramBlock': ('core.html#spectrogramblock', 'tsfast/core.py'),
                             'tsfast.core.SpectrogramBlock.__init__': ('core.html#spectrogramblock.__init__', 'tsfast/core.py'),
                             'tsfast.core.SpectrogramBlock.from_hdf': ('core.html#spectrogramblock.from_hdf', 'tsfast/core.py'),
                             'tsfast.core.TensorScalars': ('core.html#tensorscalars', 'tsfast/core.py'),
                             'tsfast.core.TensorScalars.from_hdf': ('core.html#tensorscalars.from_hdf', 'tsfast/core.py'),
                             'tsfast.core.TensorScalarsInput': ('core.html#tensorscalarsinput', 'tsfast/core.py'),
                             'tsfast.core.TensorScalarsOutput': ('core.html#tensorscalarsoutput', 'tsfast/core.py'),
                             'tsfast.core.TensorSequences': ('core.html#tensorsequences', 'tsfast/core.py'),
                             'tsfast.core.TensorSequences.from_hdf': ('core.html#tensorsequences.from_hdf', 'tsfast/core.py'),
                             'tsfast.core.TensorSequences.show': ('core.html#tensorsequences.show', 'tsfast/core.py'),
                             'tsfast.core.TensorSequencesInput': ('core.html#tensorsequencesinput', 'tsfast/core.py'),
                             'tsfast.core.TensorSequencesOutput': ('core.html#tensorsequencesoutput', 'tsfast/core.py'),
                             'tsfast.core.TensorSpectrogram': ('core.html#tensorspectrogram', 'tsfast/core.py'),
                             'tsfast.core.TensorSpectrogram.show': ('core.html#tensorspectrogram.show', 'tsfast/core.py'),
                             'tsfast.core.TensorSpectrogramInput': ('core.html#tensorspectrograminput', 'tsfast/core.py'),
                             'tsfast.core.TensorSpectrogramOutput': ('core.html#tensorspectrogramoutput', 'tsfast/core.py'),
                             'tsfast.core.ValidClmContains': ('core.html#validclmcontains', 'tsfast/core.py'),
                             'tsfast.core.ValidClmIs': ('core.html#validclmis', 'tsfast/core.py'),
                             'tsfast.core._parent_idxs': ('core.html#_parent_idxs', 'tsfast/core.py'),
                             'tsfast.core.apply_df_tfms': ('core.html#apply_df_tfms', 'tsfast/core.py'),
                             'tsfast.core.calc_shift_offsets': ('core.html#calc_shift_offsets', 'tsfast/core.py'),
                             'tsfast.core.complex_norm': ('core.html#complex_norm', 'tsfast/core.py'),
                             'tsfast.core.count_parameters': ('core.html#count_parameters', 'tsfast/core.py'),
                             'tsfast.core.decodes': ('core.html#decodes', 'tsfast/core.py'),
                             'tsfast.core.df_get_hdf_seq_len': ('core.html#df_get_hdf_seq_len', 'tsfast/core.py'),
                             'tsfast.core.downsample_mean': ('core.html#downsample_mean', 'tsfast/core.py'),
                             'tsfast.core.encodes': ('core.html#encodes', 'tsfast/core.py'),
                             'tsfast.core.get_hdf_files': ('core.html#get_hdf_files', 'tsfast/core.py'),
                             'tsfast.core.get_hdf_seq_len': ('core.html#get_hdf_seq_len', 'tsfast/core.py'),
                             'tsfast.core.hdf2scalars': ('core.html#hdf2scalars', 'tsfast/core.py'),
                             'tsfast.core.hdf_extract_sequence': ('core.html#hdf_extract_sequence', 'tsfast/core.py'),
                             'tsfast.core.obj_in_lst': ('core.html#obj_in_lst', 'tsfast/core.py'),
                             'tsfast.core.pad_sequence': ('core.html#pad_sequence', 'tsfast/core.py'),
                             'tsfast.core.plot_seqs_multi_figures': ('core.html#plot_seqs_multi_figures', 'tsfast/core.py'),
                             'tsfast.core.plot_seqs_single_figure': ('core.html#plot_seqs_single_figure', 'tsfast/core.py'),
                             'tsfast.core.plot_sequence': ('core.html#plot_sequence', 'tsfast/core.py'),
                             'tsfast.core.resample_interp': ('core.html#resample_interp', 'tsfast/core.py'),
                             'tsfast.core.running_mean': ('core.html#running_mean', 'tsfast/core.py'),
                             'tsfast.core.show_batch': ('core.html#show_batch', 'tsfast/core.py'),
                             'tsfast.core.show_results': ('core.html#show_results', 'tsfast/core.py'),
                             'tsfast.core.spectrogram': ('core.html#spectrogram', 'tsfast/core.py'),
                             'tsfast.core.toTensorSequencesInput': ('core.html#totensorsequencesinput', 'tsfast/core.py'),
                             'tsfast.core.toTensorSequencesOutput': ('core.html#totensorsequencesoutput', 'tsfast/core.py')},
            'tsfast.dataloaders': { 'tsfast.dataloaders.BatchLimit_Factory': ( 'dataloaders.html#batchlimit_factory',
                                                                               'tsfast/dataloaders.py'),
                                    'tsfast.dataloaders.TbpttDl': ('dataloaders.html#tbpttdl', 'tsfast/dataloaders.py'),
                                    'tsfast.dataloaders.TbpttDl.__init__': ('dataloaders.html#tbpttdl.__init__', 'tsfast/dataloaders.py'),
                                    'tsfast.dataloaders.TbpttDl.__iter__': ('dataloaders.html#tbpttdl.__iter__', 'tsfast/dataloaders.py'),
                                    'tsfast.dataloaders.TbpttDl.__len__': ('dataloaders.html#tbpttdl.__len__', 'tsfast/dataloaders.py'),
                                    'tsfast.dataloaders.TbpttDl._next_worker': ( 'dataloaders.html#tbpttdl._next_worker',
                                                                                 'tsfast/dataloaders.py'),
                                    'tsfast.dataloaders.TbpttDl._tbptt_generator': ( 'dataloaders.html#tbpttdl._tbptt_generator',
                                                                                     'tsfast/dataloaders.py'),
                                    'tsfast.dataloaders.TbpttDl.create_batches': ( 'dataloaders.html#tbpttdl.create_batches',
                                                                                   'tsfast/dataloaders.py'),
                                    'tsfast.dataloaders.TbpttDl.n_sub_seq': ('dataloaders.html#tbpttdl.n_sub_seq', 'tsfast/dataloaders.py'),
                                    'tsfast.dataloaders.TbpttDl.sample': ('dataloaders.html#tbpttdl.sample', 'tsfast/dataloaders.py'),
                                    'tsfast.dataloaders.TbpttResetCB': ('dataloaders.html#tbpttresetcb', 'tsfast/dataloaders.py'),
                                    'tsfast.dataloaders.TbpttResetCB.after_fit': ( 'dataloaders.html#tbpttresetcb.after_fit',
                                                                                   'tsfast/dataloaders.py'),
                                    'tsfast.dataloaders.TbpttResetCB.before_batch': ( 'dataloaders.html#tbpttresetcb.before_batch',
                                                                                      'tsfast/dataloaders.py'),
                                    'tsfast.dataloaders.WeightedDL_Factory': ( 'dataloaders.html#weighteddl_factory',
                                                                               'tsfast/dataloaders.py'),
                                    'tsfast.dataloaders.reset_model_state': ('dataloaders.html#reset_model_state', 'tsfast/dataloaders.py'),
                                    'tsfast.dataloaders.uniform_p_of_category': ( 'dataloaders.html#uniform_p_of_category',
                                                                                  'tsfast/dataloaders.py'),
                                    'tsfast.dataloaders.uniform_p_of_float': ( 'dataloaders.html#uniform_p_of_float',
                                                                               'tsfast/dataloaders.py'),
                                    'tsfast.dataloaders.uniform_p_of_float_with_gaps': ( 'dataloaders.html#uniform_p_of_float_with_gaps',
                                                                                         'tsfast/dataloaders.py')},
            'tsfast.dualrnn': { 'tsfast.dualrnn.ARProg': ('dualrnn.html#arprog', 'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.ARProg.__init__': ('dualrnn.html#arprog.__init__', 'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.ARProg.forward': ('dualrnn.html#arprog.forward', 'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.ARProg_Init': ('dualrnn.html#arprog_init', 'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.ARProg_Init.__init__': ('dualrnn.html#arprog_init.__init__', 'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.ARProg_Init.forward': ('dualrnn.html#arprog_init.forward', 'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.DiagLSTM': ('dualrnn.html#diaglstm', 'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.DiagLSTM.__init__': ('dualrnn.html#diaglstm.__init__', 'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.DiagLSTM._get_hidden': ('dualrnn.html#diaglstm._get_hidden', 'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.DiagLSTM.forward': ('dualrnn.html#diaglstm.forward', 'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.DiagLSTM.output_to_hidden': ('dualrnn.html#diaglstm.output_to_hidden', 'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.Diag_RNN': ('dualrnn.html#diag_rnn', 'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.Diag_RNN.__init__': ('dualrnn.html#diag_rnn.__init__', 'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.Diag_RNN._get_hidden': ('dualrnn.html#diag_rnn._get_hidden', 'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.Diag_RNN.forward': ('dualrnn.html#diag_rnn.forward', 'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.Diag_RNN.output_to_hidden': ('dualrnn.html#diag_rnn.output_to_hidden', 'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.Diag_RNN_raw': ('dualrnn.html#diag_rnn_raw', 'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.Diag_RNN_raw.__init__': ('dualrnn.html#diag_rnn_raw.__init__', 'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.Diag_RNN_raw.forward': ('dualrnn.html#diag_rnn_raw.forward', 'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.Diag_RNN_raw.output_to_hidden': ( 'dualrnn.html#diag_rnn_raw.output_to_hidden',
                                                                                  'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.Diag_TCN': ('dualrnn.html#diag_tcn', 'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.Diag_TCN.__init__': ('dualrnn.html#diag_tcn.__init__', 'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.Diag_TCN.forward': ('dualrnn.html#diag_tcn.forward', 'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.Diag_TCN.output_to_hidden': ('dualrnn.html#diag_tcn.output_to_hidden', 'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.NarProg': ('dualrnn.html#narprog', 'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.NarProg.__init__': ('dualrnn.html#narprog.__init__', 'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.NarProg.forward': ('dualrnn.html#narprog.forward', 'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.NarProgCallback': ('dualrnn.html#narprogcallback', 'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.NarProgCallback.__init__': ('dualrnn.html#narprogcallback.__init__', 'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.NarProgCallback.after_loss': ( 'dualrnn.html#narprogcallback.after_loss',
                                                                               'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.NarProgCallback.before_batch': ( 'dualrnn.html#narprogcallback.before_batch',
                                                                                 'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.NarProgCallback.clear': ('dualrnn.html#narprogcallback.clear', 'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.NarProgCallback.hook': ('dualrnn.html#narprogcallback.hook', 'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.NarProgCallback_variable_init': ( 'dualrnn.html#narprogcallback_variable_init',
                                                                                  'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.NarProgCallback_variable_init.__init__': ( 'dualrnn.html#narprogcallback_variable_init.__init__',
                                                                                           'tsfast/dualrnn.py'),
                                'tsfast.dualrnn.NarProgCallback_variable_init.before_batch': ( 'dualrnn.html#narprogcallback_variable_init.before_batch',
                                                                                               'tsfast/dualrnn.py')},
            'tsfast.hpopt': { 'tsfast.hpopt.CBRayReporter': ('hpopt.html#cbrayreporter', 'tsfast/hpopt.py'),
                              'tsfast.hpopt.CBRayReporter.after_epoch': ('hpopt.html#cbrayreporter.after_epoch', 'tsfast/hpopt.py'),
                              'tsfast.hpopt.CBRaySaveModel': ('hpopt.html#cbraysavemodel', 'tsfast/hpopt.py'),
                              'tsfast.hpopt.CBRaySaveModel._save': ('hpopt.html#cbraysavemodel._save', 'tsfast/hpopt.py'),
                              'tsfast.hpopt.CBRaySaveModel.after_fit': ('hpopt.html#cbraysavemodel.after_fit', 'tsfast/hpopt.py'),
                              'tsfast.hpopt.HPOptimizer': ('hpopt.html#hpoptimizer', 'tsfast/hpopt.py'),
                              'tsfast.hpopt.HPOptimizer.__init__': ('hpopt.html#hpoptimizer.__init__', 'tsfast/hpopt.py'),
                              'tsfast.hpopt.HPOptimizer.best_model': ('hpopt.html#hpoptimizer.best_model', 'tsfast/hpopt.py'),
                              'tsfast.hpopt.HPOptimizer.optimize': ('hpopt.html#hpoptimizer.optimize', 'tsfast/hpopt.py'),
                              'tsfast.hpopt.HPOptimizer.optimize_pbt': ('hpopt.html#hpoptimizer.optimize_pbt', 'tsfast/hpopt.py'),
                              'tsfast.hpopt.HPOptimizer.start_ray': ('hpopt.html#hpoptimizer.start_ray', 'tsfast/hpopt.py'),
                              'tsfast.hpopt.HPOptimizer.stop_ray': ('hpopt.html#hpoptimizer.stop_ray', 'tsfast/hpopt.py'),
                              'tsfast.hpopt.LearnerTrainable': ('hpopt.html#learnertrainable', 'tsfast/hpopt.py'),
                              'tsfast.hpopt.LearnerTrainable._export_model': ( 'hpopt.html#learnertrainable._export_model',
                                                                               'tsfast/hpopt.py'),
                              'tsfast.hpopt.LearnerTrainable.load_checkpoint': ( 'hpopt.html#learnertrainable.load_checkpoint',
                                                                                 'tsfast/hpopt.py'),
                              'tsfast.hpopt.LearnerTrainable.reset_config': ('hpopt.html#learnertrainable.reset_config', 'tsfast/hpopt.py'),
                              'tsfast.hpopt.LearnerTrainable.save_checkpoint': ( 'hpopt.html#learnertrainable.save_checkpoint',
                                                                                 'tsfast/hpopt.py'),
                              'tsfast.hpopt.LearnerTrainable.setup': ('hpopt.html#learnertrainable.setup', 'tsfast/hpopt.py'),
                              'tsfast.hpopt.LearnerTrainable.step': ('hpopt.html#learnertrainable.step', 'tsfast/hpopt.py'),
                              'tsfast.hpopt.learner_optimize': ('hpopt.html#learner_optimize', 'tsfast/hpopt.py'),
                              'tsfast.hpopt.log_uniform': ('hpopt.html#log_uniform', 'tsfast/hpopt.py'),
                              'tsfast.hpopt.sample_config': ('hpopt.html#sample_config', 'tsfast/hpopt.py'),
                              'tsfast.hpopt.stop_shared_memory_managers': ('hpopt.html#stop_shared_memory_managers', 'tsfast/hpopt.py')},
            'tsfast.learner': { 'tsfast.learner.ARInitCB': ('learner.html#arinitcb', 'tsfast/learner.py'),
                                'tsfast.learner.ARInitCB.before_batch': ('learner.html#arinitcb.before_batch', 'tsfast/learner.py'),
                                'tsfast.learner.AR_RNNLearner': ('learner.html#ar_rnnlearner', 'tsfast/learner.py'),
                                'tsfast.learner.AR_TCNLearner': ('learner.html#ar_tcnlearner', 'tsfast/learner.py'),
                                'tsfast.learner.BatchLossFilter': ('learner.html#batchlossfilter', 'tsfast/learner.py'),
                                'tsfast.learner.BatchLossFilter.__init__': ('learner.html#batchlossfilter.__init__', 'tsfast/learner.py'),
                                'tsfast.learner.BatchLossFilter.after_pred': ( 'learner.html#batchlossfilter.after_pred',
                                                                               'tsfast/learner.py'),
                                'tsfast.learner.CB_AddLoss': ('learner.html#cb_addloss', 'tsfast/learner.py'),
                                'tsfast.learner.CB_AddLoss.__init__': ('learner.html#cb_addloss.__init__', 'tsfast/learner.py'),
                                'tsfast.learner.CB_AddLoss.after_loss': ('learner.html#cb_addloss.after_loss', 'tsfast/learner.py'),
                                'tsfast.learner.CB_PlotGradient': ('learner.html#cb_plotgradient', 'tsfast/learner.py'),
                                'tsfast.learner.CB_PlotGradient.__init__': ('learner.html#cb_plotgradient.__init__', 'tsfast/learner.py'),
                                'tsfast.learner.CB_PlotGradient.after_backward': ( 'learner.html#cb_plotgradient.after_backward',
                                                                                   'tsfast/learner.py'),
                                'tsfast.learner.CB_PlotGradient.begin_fit': ('learner.html#cb_plotgradient.begin_fit', 'tsfast/learner.py'),
                                'tsfast.learner.CB_TruncateSequence': ('learner.html#cb_truncatesequence', 'tsfast/learner.py'),
                                'tsfast.learner.CB_TruncateSequence.__init__': ( 'learner.html#cb_truncatesequence.__init__',
                                                                                 'tsfast/learner.py'),
                                'tsfast.learner.CB_TruncateSequence.before_batch': ( 'learner.html#cb_truncatesequence.before_batch',
                                                                                     'tsfast/learner.py'),
                                'tsfast.learner.CRNNLearner': ('learner.html#crnnlearner', 'tsfast/learner.py'),
                                'tsfast.learner.CancelNaNCallback': ('learner.html#cancelnancallback', 'tsfast/learner.py'),
                                'tsfast.learner.CancelNaNCallback.after_loss': ( 'learner.html#cancelnancallback.after_loss',
                                                                                 'tsfast/learner.py'),
                                'tsfast.learner.CutLoss': ('learner.html#cutloss', 'tsfast/learner.py'),
                                'tsfast.learner.GradientBatchFiltering': ('learner.html#gradientbatchfiltering', 'tsfast/learner.py'),
                                'tsfast.learner.GradientBatchFiltering.__init__': ( 'learner.html#gradientbatchfiltering.__init__',
                                                                                    'tsfast/learner.py'),
                                'tsfast.learner.GradientBatchFiltering.before_step': ( 'learner.html#gradientbatchfiltering.before_step',
                                                                                       'tsfast/learner.py'),
                                'tsfast.learner.GradientClipping': ('learner.html#gradientclipping', 'tsfast/learner.py'),
                                'tsfast.learner.GradientClipping.__init__': ('learner.html#gradientclipping.__init__', 'tsfast/learner.py'),
                                'tsfast.learner.GradientClipping.after_backward': ( 'learner.html#gradientclipping.after_backward',
                                                                                    'tsfast/learner.py'),
                                'tsfast.learner.GradientNormPrint': ('learner.html#gradientnormprint', 'tsfast/learner.py'),
                                'tsfast.learner.GradientNormPrint.before_step': ( 'learner.html#gradientnormprint.before_step',
                                                                                  'tsfast/learner.py'),
                                'tsfast.learner.RNNLearner': ('learner.html#rnnlearner', 'tsfast/learner.py'),
                                'tsfast.learner.RandSeqLenLoss': ('learner.html#randseqlenloss', 'tsfast/learner.py'),
                                'tsfast.learner.SkipFirstNCallback': ('learner.html#skipfirstncallback', 'tsfast/learner.py'),
                                'tsfast.learner.SkipFirstNCallback.__init__': ( 'learner.html#skipfirstncallback.__init__',
                                                                                'tsfast/learner.py'),
                                'tsfast.learner.SkipFirstNCallback.after_pred': ( 'learner.html#skipfirstncallback.after_pred',
                                                                                  'tsfast/learner.py'),
                                'tsfast.learner.SkipNLoss': ('learner.html#skipnloss', 'tsfast/learner.py'),
                                'tsfast.learner.SkipNaNCallback': ('learner.html#skipnancallback', 'tsfast/learner.py'),
                                'tsfast.learner.SkipNaNCallback.after_loss': ( 'learner.html#skipnancallback.after_loss',
                                                                               'tsfast/learner.py'),
                                'tsfast.learner.TCNLearner': ('learner.html#tcnlearner', 'tsfast/learner.py'),
                                'tsfast.learner.TimeSeriesRegularizer': ('learner.html#timeseriesregularizer', 'tsfast/learner.py'),
                                'tsfast.learner.TimeSeriesRegularizer.__init__': ( 'learner.html#timeseriesregularizer.__init__',
                                                                                   'tsfast/learner.py'),
                                'tsfast.learner.TimeSeriesRegularizer.after_loss': ( 'learner.html#timeseriesregularizer.after_loss',
                                                                                     'tsfast/learner.py'),
                                'tsfast.learner.TimeSeriesRegularizer.hook': ( 'learner.html#timeseriesregularizer.hook',
                                                                               'tsfast/learner.py'),
                                'tsfast.learner.VarySeqLen': ('learner.html#varyseqlen', 'tsfast/learner.py'),
                                'tsfast.learner.VarySeqLen.__init__': ('learner.html#varyseqlen.__init__', 'tsfast/learner.py'),
                                'tsfast.learner.VarySeqLen.before_batch': ('learner.html#varyseqlen.before_batch', 'tsfast/learner.py'),
                                'tsfast.learner.WeightClipping': ('learner.html#weightclipping', 'tsfast/learner.py'),
                                'tsfast.learner.WeightClipping.__init__': ('learner.html#weightclipping.__init__', 'tsfast/learner.py'),
                                'tsfast.learner.WeightClipping.after_batch': ( 'learner.html#weightclipping.after_batch',
                                                                               'tsfast/learner.py'),
                                'tsfast.learner.cos_sim_loss': ('learner.html#cos_sim_loss', 'tsfast/learner.py'),
                                'tsfast.learner.cos_sim_loss_pow': ('learner.html#cos_sim_loss_pow', 'tsfast/learner.py'),
                                'tsfast.learner.float64_func': ('learner.html#float64_func', 'tsfast/learner.py'),
                                'tsfast.learner.fun_rmse': ('learner.html#fun_rmse', 'tsfast/learner.py'),
                                'tsfast.learner.get_inp_out_size': ('learner.html#get_inp_out_size', 'tsfast/learner.py'),
                                'tsfast.learner.ignore_nan': ('learner.html#ignore_nan', 'tsfast/learner.py'),
                                'tsfast.learner.mean_vaf': ('learner.html#mean_vaf', 'tsfast/learner.py'),
                                'tsfast.learner.nrmse': ('learner.html#nrmse', 'tsfast/learner.py'),
                                'tsfast.learner.nrmse_std': ('learner.html#nrmse_std', 'tsfast/learner.py'),
                                'tsfast.learner.plot_grad_flow': ('learner.html#plot_grad_flow', 'tsfast/learner.py'),
                                'tsfast.learner.sched_lin_p': ('learner.html#sched_lin_p', 'tsfast/learner.py'),
                                'tsfast.learner.sched_ramp': ('learner.html#sched_ramp', 'tsfast/learner.py'),
                                'tsfast.learner.weighted_mae': ('learner.html#weighted_mae', 'tsfast/learner.py')},
            'tsfast.models.core': { 'tsfast.models.core.AR_Model': ('models.html#ar_model', 'tsfast/models/core.py'),
                                    'tsfast.models.core.AR_Model.__init__': ('models.html#ar_model.__init__', 'tsfast/models/core.py'),
                                    'tsfast.models.core.AR_Model.forward': ('models.html#ar_model.forward', 'tsfast/models/core.py'),
                                    'tsfast.models.core.AR_Model.init_normalize': ( 'models.html#ar_model.init_normalize',
                                                                                    'tsfast/models/core.py'),
                                    'tsfast.models.core.AR_Model.init_normalize_values': ( 'models.html#ar_model.init_normalize_values',
                                                                                           'tsfast/models/core.py'),
                                    'tsfast.models.core.AR_Model.reset_state': ( 'models.html#ar_model.reset_state',
                                                                                 'tsfast/models/core.py'),
                                    'tsfast.models.core.BatchNorm_1D_Stateful': ( 'models.html#batchnorm_1d_stateful',
                                                                                  'tsfast/models/core.py'),
                                    'tsfast.models.core.BatchNorm_1D_Stateful.__init__': ( 'models.html#batchnorm_1d_stateful.__init__',
                                                                                           'tsfast/models/core.py'),
                                    'tsfast.models.core.BatchNorm_1D_Stateful.forward': ( 'models.html#batchnorm_1d_stateful.forward',
                                                                                          'tsfast/models/core.py'),
                                    'tsfast.models.core.BatchNorm_1D_Stateful.reset_parameters': ( 'models.html#batchnorm_1d_stateful.reset_parameters',
                                                                                                   'tsfast/models/core.py'),
                                    'tsfast.models.core.BatchNorm_1D_Stateful.reset_state': ( 'models.html#batchnorm_1d_stateful.reset_state',
                                                                                              'tsfast/models/core.py'),
                                    'tsfast.models.core.CConv1D': ('models.html#cconv1d', 'tsfast/models/core.py'),
                                    'tsfast.models.core.CRNN': ('models.html#crnn', 'tsfast/models/core.py'),
                                    'tsfast.models.core.CRNN.__init__': ('models.html#crnn.__init__', 'tsfast/models/core.py'),
                                    'tsfast.models.core.CRNN.forward': ('models.html#crnn.forward', 'tsfast/models/core.py'),
                                    'tsfast.models.core.CausalConv1d': ('models.html#causalconv1d', 'tsfast/models/core.py'),
                                    'tsfast.models.core.CausalConv1d.__init__': ( 'models.html#causalconv1d.__init__',
                                                                                  'tsfast/models/core.py'),
                                    'tsfast.models.core.CausalConv1d.forward': ( 'models.html#causalconv1d.forward',
                                                                                 'tsfast/models/core.py'),
                                    'tsfast.models.core.CausalConv1d.reset_state': ( 'models.html#causalconv1d.reset_state',
                                                                                     'tsfast/models/core.py'),
                                    'tsfast.models.core.DenseBlock_RNN': ('models.html#denseblock_rnn', 'tsfast/models/core.py'),
                                    'tsfast.models.core.DenseBlock_RNN.__init__': ( 'models.html#denseblock_rnn.__init__',
                                                                                    'tsfast/models/core.py'),
                                    'tsfast.models.core.DenseLayer_RNN': ('models.html#denselayer_rnn', 'tsfast/models/core.py'),
                                    'tsfast.models.core.DenseLayer_RNN.__init__': ( 'models.html#denselayer_rnn.__init__',
                                                                                    'tsfast/models/core.py'),
                                    'tsfast.models.core.DenseLayer_RNN.forward': ( 'models.html#denselayer_rnn.forward',
                                                                                   'tsfast/models/core.py'),
                                    'tsfast.models.core.DenseNet_RNN': ('models.html#densenet_rnn', 'tsfast/models/core.py'),
                                    'tsfast.models.core.DenseNet_RNN.__init__': ( 'models.html#densenet_rnn.__init__',
                                                                                  'tsfast/models/core.py'),
                                    'tsfast.models.core.Normalizer1D': ('models.html#normalizer1d', 'tsfast/models/core.py'),
                                    'tsfast.models.core.Normalizer1D.__init__': ( 'models.html#normalizer1d.__init__',
                                                                                  'tsfast/models/core.py'),
                                    'tsfast.models.core.Normalizer1D.normalize': ( 'models.html#normalizer1d.normalize',
                                                                                   'tsfast/models/core.py'),
                                    'tsfast.models.core.Normalizer1D.unnormalize': ( 'models.html#normalizer1d.unnormalize',
                                                                                     'tsfast/models/core.py'),
                                    'tsfast.models.core.RNN': ('models.html#rnn', 'tsfast/models/core.py'),
                                    'tsfast.models.core.RNN.__init__': ('models.html#rnn.__init__', 'tsfast/models/core.py'),
                                    'tsfast.models.core.RNN._get_hidden': ('models.html#rnn._get_hidden', 'tsfast/models/core.py'),
                                    'tsfast.models.core.RNN._one_rnn': ('models.html#rnn._one_rnn', 'tsfast/models/core.py'),
                                    'tsfast.models.core.RNN.forward': ('models.html#rnn.forward', 'tsfast/models/core.py'),
                                    'tsfast.models.core.RNN.reset_state': ('models.html#rnn.reset_state', 'tsfast/models/core.py'),
                                    'tsfast.models.core.ResidualBlock_RNN': ('models.html#residualblock_rnn', 'tsfast/models/core.py'),
                                    'tsfast.models.core.ResidualBlock_RNN.__init__': ( 'models.html#residualblock_rnn.__init__',
                                                                                       'tsfast/models/core.py'),
                                    'tsfast.models.core.ResidualBlock_RNN.forward': ( 'models.html#residualblock_rnn.forward',
                                                                                      'tsfast/models/core.py'),
                                    'tsfast.models.core.SeperateCRNN': ('models.html#seperatecrnn', 'tsfast/models/core.py'),
                                    'tsfast.models.core.SeperateCRNN.__init__': ( 'models.html#seperatecrnn.__init__',
                                                                                  'tsfast/models/core.py'),
                                    'tsfast.models.core.SeperateCRNN.forward': ( 'models.html#seperatecrnn.forward',
                                                                                 'tsfast/models/core.py'),
                                    'tsfast.models.core.SeperateRNN': ('models.html#seperaternn', 'tsfast/models/core.py'),
                                    'tsfast.models.core.SeperateRNN.__init__': ( 'models.html#seperaternn.__init__',
                                                                                 'tsfast/models/core.py'),
                                    'tsfast.models.core.SeperateRNN.forward': ('models.html#seperaternn.forward', 'tsfast/models/core.py'),
                                    'tsfast.models.core.SeperateTCN': ('models.html#seperatetcn', 'tsfast/models/core.py'),
                                    'tsfast.models.core.SeperateTCN.__init__': ( 'models.html#seperatetcn.__init__',
                                                                                 'tsfast/models/core.py'),
                                    'tsfast.models.core.SeperateTCN.forward': ('models.html#seperatetcn.forward', 'tsfast/models/core.py'),
                                    'tsfast.models.core.SeperateTCN.reset_state': ( 'models.html#seperatetcn.reset_state',
                                                                                    'tsfast/models/core.py'),
                                    'tsfast.models.core.SeqLinear': ('models.html#seqlinear', 'tsfast/models/core.py'),
                                    'tsfast.models.core.SeqLinear.__init__': ('models.html#seqlinear.__init__', 'tsfast/models/core.py'),
                                    'tsfast.models.core.SeqLinear.forward': ('models.html#seqlinear.forward', 'tsfast/models/core.py'),
                                    'tsfast.models.core.Sequential_RNN': ('models.html#sequential_rnn', 'tsfast/models/core.py'),
                                    'tsfast.models.core.Sequential_RNN.forward': ( 'models.html#sequential_rnn.forward',
                                                                                   'tsfast/models/core.py'),
                                    'tsfast.models.core.SimpleRNN': ('models.html#simplernn', 'tsfast/models/core.py'),
                                    'tsfast.models.core.SimpleRNN.__init__': ('models.html#simplernn.__init__', 'tsfast/models/core.py'),
                                    'tsfast.models.core.SimpleRNN.forward': ('models.html#simplernn.forward', 'tsfast/models/core.py'),
                                    'tsfast.models.core.SimpleResidualRNN': ('models.html#simpleresidualrnn', 'tsfast/models/core.py'),
                                    'tsfast.models.core.SimpleResidualRNN.__init__': ( 'models.html#simpleresidualrnn.__init__',
                                                                                       'tsfast/models/core.py'),
                                    'tsfast.models.core.TCN': ('models.html#tcn', 'tsfast/models/core.py'),
                                    'tsfast.models.core.TCN.__init__': ('models.html#tcn.__init__', 'tsfast/models/core.py'),
                                    'tsfast.models.core.TCN.forward': ('models.html#tcn.forward', 'tsfast/models/core.py'),
                                    'tsfast.models.core.TCN_Block': ('models.html#tcn_block', 'tsfast/models/core.py'),
                                    'tsfast.models.core.TCN_Block.__init__': ('models.html#tcn_block.__init__', 'tsfast/models/core.py'),
                                    'tsfast.models.core.TCN_Block.forward': ('models.html#tcn_block.forward', 'tsfast/models/core.py')},
            'tsfast.quaternions': { 'tsfast.quaternions.HDF2Inclination': ( 'tensorquaternions.html#hdf2inclination',
                                                                            'tsfast/quaternions.py'),
                                    'tsfast.quaternions.HDF2Inclination._hdf_extract_sequence': ( 'tensorquaternions.html#hdf2inclination._hdf_extract_sequence',
                                                                                                  'tsfast/quaternions.py'),
                                    'tsfast.quaternions.HDF2Quaternion': ('tensorquaternions.html#hdf2quaternion', 'tsfast/quaternions.py'),
                                    'tsfast.quaternions.HDF2Quaternion._hdf_extract_sequence': ( 'tensorquaternions.html#hdf2quaternion._hdf_extract_sequence',
                                                                                                 'tsfast/quaternions.py'),
                                    'tsfast.quaternions.InclinationBlock': ( 'tensorquaternions.html#inclinationblock',
                                                                             'tsfast/quaternions.py'),
                                    'tsfast.quaternions.InclinationBlock.__init__': ( 'tensorquaternions.html#inclinationblock.__init__',
                                                                                      'tsfast/quaternions.py'),
                                    'tsfast.quaternions.InclinationBlock.from_hdf': ( 'tensorquaternions.html#inclinationblock.from_hdf',
                                                                                      'tsfast/quaternions.py'),
                                    'tsfast.quaternions.QuaternionAugmentation': ( 'tensorquaternions.html#quaternionaugmentation',
                                                                                   'tsfast/quaternions.py'),
                                    'tsfast.quaternions.QuaternionAugmentation.__call__': ( 'tensorquaternions.html#quaternionaugmentation.__call__',
                                                                                            'tsfast/quaternions.py'),
                                    'tsfast.quaternions.QuaternionAugmentation.__init__': ( 'tensorquaternions.html#quaternionaugmentation.__init__',
                                                                                            'tsfast/quaternions.py'),
                                    'tsfast.quaternions.QuaternionAugmentation.encodes': ( 'tensorquaternions.html#quaternionaugmentation.encodes',
                                                                                           'tsfast/quaternions.py'),
                                    'tsfast.quaternions.QuaternionBlock': ( 'tensorquaternions.html#quaternionblock',
                                                                            'tsfast/quaternions.py'),
                                    'tsfast.quaternions.QuaternionBlock.__init__': ( 'tensorquaternions.html#quaternionblock.__init__',
                                                                                     'tsfast/quaternions.py'),
                                    'tsfast.quaternions.QuaternionBlock.from_hdf': ( 'tensorquaternions.html#quaternionblock.from_hdf',
                                                                                     'tsfast/quaternions.py'),
                                    'tsfast.quaternions.QuaternionRegularizer': ( 'tensorquaternions.html#quaternionregularizer',
                                                                                  'tsfast/quaternions.py'),
                                    'tsfast.quaternions.QuaternionRegularizer.__init__': ( 'tensorquaternions.html#quaternionregularizer.__init__',
                                                                                           'tsfast/quaternions.py'),
                                    'tsfast.quaternions.QuaternionRegularizer.after_loss': ( 'tensorquaternions.html#quaternionregularizer.after_loss',
                                                                                             'tsfast/quaternions.py'),
                                    'tsfast.quaternions.QuaternionRegularizer.hook': ( 'tensorquaternions.html#quaternionregularizer.hook',
                                                                                       'tsfast/quaternions.py'),
                                    'tsfast.quaternions.Quaternion_ResamplingModel': ( 'tensorquaternions.html#quaternion_resamplingmodel',
                                                                                       'tsfast/quaternions.py'),
                                    'tsfast.quaternions.Quaternion_ResamplingModel.__init__': ( 'tensorquaternions.html#quaternion_resamplingmodel.__init__',
                                                                                                'tsfast/quaternions.py'),
                                    'tsfast.quaternions.Quaternion_ResamplingModel.forward': ( 'tensorquaternions.html#quaternion_resamplingmodel.forward',
                                                                                               'tsfast/quaternions.py'),
                                    'tsfast.quaternions.TensorInclination': ( 'tensorquaternions.html#tensorinclination',
                                                                              'tsfast/quaternions.py'),
                                    'tsfast.quaternions.TensorQuaternionAngle': ( 'tensorquaternions.html#tensorquaternionangle',
                                                                                  'tsfast/quaternions.py'),
                                    'tsfast.quaternions.TensorQuaternionInclination': ( 'tensorquaternions.html#tensorquaternioninclination',
                                                                                        'tsfast/quaternions.py'),
                                    'tsfast.quaternions.abs_inclination': ( 'tensorquaternions.html#abs_inclination',
                                                                            'tsfast/quaternions.py'),
                                    'tsfast.quaternions.abs_rel_angle': ('tensorquaternions.html#abs_rel_angle', 'tsfast/quaternions.py'),
                                    'tsfast.quaternions.angle_loss': ('tensorquaternions.html#angle_loss', 'tsfast/quaternions.py'),
                                    'tsfast.quaternions.angle_loss_opt': ('tensorquaternions.html#angle_loss_opt', 'tsfast/quaternions.py'),
                                    'tsfast.quaternions.augmentation_groups': ( 'tensorquaternions.html#augmentation_groups',
                                                                                'tsfast/quaternions.py'),
                                    'tsfast.quaternions.conjQuat': ('tensorquaternions.html#conjquat', 'tsfast/quaternions.py'),
                                    'tsfast.quaternions.deg_rmse': ('tensorquaternions.html#deg_rmse', 'tsfast/quaternions.py'),
                                    'tsfast.quaternions.diffQuat': ('tensorquaternions.html#diffquat', 'tsfast/quaternions.py'),
                                    'tsfast.quaternions.inclinationAngle': ( 'tensorquaternions.html#inclinationangle',
                                                                             'tsfast/quaternions.py'),
                                    'tsfast.quaternions.inclinationAngleAbs': ( 'tensorquaternions.html#inclinationangleabs',
                                                                                'tsfast/quaternions.py'),
                                    'tsfast.quaternions.inclination_loss': ( 'tensorquaternions.html#inclination_loss',
                                                                             'tsfast/quaternions.py'),
                                    'tsfast.quaternions.inclination_loss_abs': ( 'tensorquaternions.html#inclination_loss_abs',
                                                                                 'tsfast/quaternions.py'),
                                    'tsfast.quaternions.inclination_loss_smooth': ( 'tensorquaternions.html#inclination_loss_smooth',
                                                                                    'tsfast/quaternions.py'),
                                    'tsfast.quaternions.inclination_loss_squared': ( 'tensorquaternions.html#inclination_loss_squared',
                                                                                     'tsfast/quaternions.py'),
                                    'tsfast.quaternions.mean_inclination_deg': ( 'tensorquaternions.html#mean_inclination_deg',
                                                                                 'tsfast/quaternions.py'),
                                    'tsfast.quaternions.mean_rel_angle_deg': ( 'tensorquaternions.html#mean_rel_angle_deg',
                                                                               'tsfast/quaternions.py'),
                                    'tsfast.quaternions.ms_inclination': ('tensorquaternions.html#ms_inclination', 'tsfast/quaternions.py'),
                                    'tsfast.quaternions.ms_rel_angle': ('tensorquaternions.html#ms_rel_angle', 'tsfast/quaternions.py'),
                                    'tsfast.quaternions.multiplyQuat': ('tensorquaternions.html#multiplyquat', 'tsfast/quaternions.py'),
                                    'tsfast.quaternions.multiplyQuat_np': ( 'tensorquaternions.html#multiplyquat_np',
                                                                            'tsfast/quaternions.py'),
                                    'tsfast.quaternions.norm_quaternion': ( 'tensorquaternions.html#norm_quaternion',
                                                                            'tsfast/quaternions.py'),
                                    'tsfast.quaternions.pitchAngle': ('tensorquaternions.html#pitchangle', 'tsfast/quaternions.py'),
                                    'tsfast.quaternions.plot_quaternion_inclination': ( 'tensorquaternions.html#plot_quaternion_inclination',
                                                                                        'tsfast/quaternions.py'),
                                    'tsfast.quaternions.plot_quaternion_rel_angle': ( 'tensorquaternions.html#plot_quaternion_rel_angle',
                                                                                      'tsfast/quaternions.py'),
                                    'tsfast.quaternions.plot_scalar_inclination': ( 'tensorquaternions.html#plot_scalar_inclination',
                                                                                    'tsfast/quaternions.py'),
                                    'tsfast.quaternions.quatFromAngleAxis': ( 'tensorquaternions.html#quatfromangleaxis',
                                                                              'tsfast/quaternions.py'),
                                    'tsfast.quaternions.quatFromAngleAxis_np': ( 'tensorquaternions.html#quatfromangleaxis_np',
                                                                                 'tsfast/quaternions.py'),
                                    'tsfast.quaternions.quatInterp': ('tensorquaternions.html#quatinterp', 'tsfast/quaternions.py'),
                                    'tsfast.quaternions.quatInterp_np': ('tensorquaternions.html#quatinterp_np', 'tsfast/quaternions.py'),
                                    'tsfast.quaternions.rad2deg': ('tensorquaternions.html#rad2deg', 'tsfast/quaternions.py'),
                                    'tsfast.quaternions.rand_quat': ('tensorquaternions.html#rand_quat', 'tsfast/quaternions.py'),
                                    'tsfast.quaternions.relativeAngle': ('tensorquaternions.html#relativeangle', 'tsfast/quaternions.py'),
                                    'tsfast.quaternions.relativeQuat': ('tensorquaternions.html#relativequat', 'tsfast/quaternions.py'),
                                    'tsfast.quaternions.relativeQuat_np': ( 'tensorquaternions.html#relativequat_np',
                                                                            'tsfast/quaternions.py'),
                                    'tsfast.quaternions.rms_inclination': ( 'tensorquaternions.html#rms_inclination',
                                                                            'tsfast/quaternions.py'),
                                    'tsfast.quaternions.rms_inclination_deg': ( 'tensorquaternions.html#rms_inclination_deg',
                                                                                'tsfast/quaternions.py'),
                                    'tsfast.quaternions.rms_pitch_deg': ('tensorquaternions.html#rms_pitch_deg', 'tsfast/quaternions.py'),
                                    'tsfast.quaternions.rms_rel_angle_deg': ( 'tensorquaternions.html#rms_rel_angle_deg',
                                                                              'tsfast/quaternions.py'),
                                    'tsfast.quaternions.rms_roll_deg': ('tensorquaternions.html#rms_roll_deg', 'tsfast/quaternions.py'),
                                    'tsfast.quaternions.rollAngle': ('tensorquaternions.html#rollangle', 'tsfast/quaternions.py'),
                                    'tsfast.quaternions.rot_vec': ('tensorquaternions.html#rot_vec', 'tsfast/quaternions.py'),
                                    'tsfast.quaternions.safe_acos': ('tensorquaternions.html#safe_acos', 'tsfast/quaternions.py'),
                                    'tsfast.quaternions.safe_acos_double': ( 'tensorquaternions.html#safe_acos_double',
                                                                             'tsfast/quaternions.py'),
                                    'tsfast.quaternions.show_batch': ('tensorquaternions.html#show_batch', 'tsfast/quaternions.py'),
                                    'tsfast.quaternions.show_results': ('tensorquaternions.html#show_results', 'tsfast/quaternions.py'),
                                    'tsfast.quaternions.smooth_inclination': ( 'tensorquaternions.html#smooth_inclination',
                                                                               'tsfast/quaternions.py')}}}
